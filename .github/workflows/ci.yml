on: push

jobs:
  build:

    name: ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install GTest
        run: sudo apt-get install libgtest-dev -y 

      - name: Install Valgrind
        run: sudo apt-get install -y valgrind

      - name: Install Gcovr
        run: pip install gcovr

      - name: Install Cpplint
        run: pip install cpplint

      - name: Install Cppcheck
        run: sudo apt-get install -y cppcheck

      - name: Install Clang-format
        run: sudo apt-get install -y clang-format

      - name: Install Scan-build
        run: sudo apt-get install -y clang-tools

      - name: Install Clang-tidy
        run: sudo apt-get install clang-tidy

      - name: Build
        run: | 
          mkdir build
          cmake -B build
          make -C build 

      - name: Running tests
        run: |
          mkdir lib/matrix_calc/tests/data_consistent
          mkdir lib/matrix_calc/tests/data_parallel
          ctest --test-dir build --output-on-failure

      - name: Measurements report
        uses: actions/upload-artifact@v2
        with:
          name: Time report
          path: |
            lib/matrix_calc/tests/data_consistent/time.txt
            lib/matrix_calc/tests/data_parallel/time.txt

      - name: Code coverage
        run: |
          cmake -B build -D WITH_COVERAGE=ON
          make -C build 
          ctest --test-dir build --output-on-failure
          mkdir coverage_report
          gcovr -r . -f lib/matrix_calc/src/ --html --html-details -o coverage_report/report.html

      - name: Coverage report
        uses: actions/upload-artifact@v2
        with:
          name: Code coverage
          path: coverage_report/

      - name: Valgrind
        run: |
          cmake -B build -D VALGRIND=ON -D WITH_COVERAGE=OFF
          make -C build 
          ctest --test-dir build -T memcheck
          $(for file in ./build/Testing/Temporary/MemoryChecker.*.log; do if [ -s $file ]; then exit 1; fi; done)

      - name: Address sanitizer
        run: |
          cmake -B build -D ADRESS_SANITIZER=ON -D VALGRIND=OFF
          make -C build 
          ctest --test-dir build --output-on-failure

      - name: Leak sanitizer
        run: |
          cmake -B build -D LEAK_SANITIZER=ON -D ADRESS_SANITIZER=OFF
          make -C build 
          ctest --test-dir build --output-on-failure

      - name: Undefined sanitizer
        run: |
          cmake -B build -D UNDEFINED_SANITIZER=ON -D LEAK_SANITIZER=OFF
          make -C build 
          ctest --test-dir build --output-on-failure

      - name: Thread sanitizer
        run: | 
          cmake -B build -D THREAD_SANITIZER=ON -D UNDEFINED_SANITIZER=OFF
          make -C build 
          ctest --test-dir build --output-on-failure

      - name: Cpplint
        run: |
          cpplint lib/matrix_calc/src/* lib/matrix_calc/include/* lib/matrix_read/src/* lib/matrix_read/include/* \
                  lib/errors/include/* src/*

      - name: Cppcheck
        run: |
          cppcheck --enable=all --inconclusive --suppress=missingIncludeSystem --error-exitcode=1 \
                   lib/matrix_calc/src/* -I lib/matrix_calc/include/ \
                   lib/matrix_read/src/* -I lib/matrix_read/include/ \
                   -I lib/errors/include/ src/*

      - name: Clang-format
        run: |
          clang-format --Werror --dry-run \
                       lib/matrix_calc/src/* lib/matrix_calc/include/* \
                       lib/matrix_read/src/* lib/matrix_read/include/* \
                       lib/matrix_calc/tests/src/* lib/matrix_read/tests/src/* \
                       src/*

      - name: Scan-build
        run: |
          mkdir scan_build
          cd scan_build
          scan-build cmake ..
          scan-build make

      - name: Clang-tidy
        run: |
          clang-tidy src/* lib/matrix_calc/src/* lib/matrix_read/src/* -- \
           -I lib/matrix_calc/include/ -I lib/matrix_read/include/ -I lib/errors/include/ -I lib/utils/include/
